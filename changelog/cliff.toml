[bump]  # https://git-cliff.org/docs/configuration/bump
features_always_bump_minor = false
breaking_always_bump_major = false
initial_tag = "0.0.0"

[changelog]  # https://git-cliff.org/docs/configuration/changelog
header = """# Changelog"""
# https://github.com/orhun/git-cliff/blob/main/cliff.toml
body = """
{%- macro remote_url() -%}
  https://github.com/{{ remote.github.owner }}/{{ remote.github.repo }}
{%- endmacro -%}

{%- macro print_commit(commit) -%}
  - {% if commit.scope -%}**{{ commit.scope }}:** {% endif -%}\
      {{ commit.message }} - \
      ([{{ commit.id | truncate(length=7, end="") }}]({{ self::remote_url() }}/commit/{{ commit.id }}))
{%- endmacro -%}

{%- macro user(username) -%}
  {%- if username is ending_with("[bot]") -%}
    {%- set botname = username | trim_end_matches(pat="[bot]") -%}
    [@{{ username }}](https://github.com/apps/{{ botname }})
  {%- else -%}
    [@{{ username }}](https://github.com/{{ username }})
  {%- endif -%}
{%- endmacro user -%}

{%- if version -%}
  {%- if previous.version -%}
    ## [{{ version | trim_start_matches(pat="v") }}]\
      ({{ self::remote_url() }}/compare/{{ previous.version }}..{{ version }}) - {{ timestamp | date(format="%Y-%m-%d") }}
  {%- else -%}
    ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
  {%- endif -%}
{%- else -%}
    ## [unreleased]
{%- endif %}

{% for group, commits in commits | group_by(attribute="group") -%}
  ### {{ group | striptags | trim | upper_first }}
  {% for commit in commits | filter(attribute="scope") | sort(attribute="scope") -%}
    {{ self::print_commit(commit=commit) }}
  {% endfor -%}
  {% for commit in commits -%}
    {%- if not commit.scope -%}
      {{ self::print_commit(commit=commit) }}
    {% endif -%}
  {%- endfor -%}
{%- endfor -%}

{%- if github -%}
  {%- if github.contributors | filter(attribute="is_first_time", value=true) | length != 0 -%}
    ### ‚ù§Ô∏è New Contributors
  {% endif -%}
  {%- for contributor in github.contributors | filter(attribute="is_first_time", value=true) -%}
    - {{ self::user(username=contributor.username) }} made their first contribution
      {%- if contributor.pr_number %} in \
        [#{{ contributor.pr_number }}]({{ self::remote_url() }}/pull/{{ contributor.pr_number }})
      {%- endif %}
  {% endfor -%}
{%- endif -%}
"""
footer = ""
trim = true
render_always = false
postprocessors = []
output = "CHANGELOG.md"

[git]  # https://git-cliff.org/docs/configuration/git
conventional_commits = true
filter_unconventional = false
split_commits = false
commit_preprocessors = [
  # https://git-cliff.org/docs/tips-and-tricks#remove-gitmoji
  # Remove gitmoji, both actual UTF emoji and :emoji:
  { pattern = ' *(:\w+:|[\p{Emoji_Presentation}\p{Extended_Pictographic}](?:\u{FE0F})?\u{200D}?) *', replace = "" },
]
commit_parsers = [
  # https://github.com/arvinxx/gitmoji-commit-workflow/blob/8f21e287ec3c3f5144f3a606a3c737bea6d67e80/packages/changelog/src/transformer/typeDisplayName.ts
  # https://github.com/conventional-changelog/conventional-changelog/blob/65550d9a30cfab4b00b3e982e42bd68fedafcefc/packages/conventional-changelog-conventionalcommits/src/constants.js
  # https://github.com/lobehub/lobe-cli-toolbox/blob/09ce889f879850d8bc081da5df420c87b99379ac/packages/lobe-commit/src/constants/gitmojis.ts
  { message = '^(?<type>\w+)(\((?<scope>\w+)\))?(?<breaking>!):', group = "<!-- 00 -->üí• BREAKING CHANGES" },
  { message = "BREAKING CHANGE", group = "<!-- 00 -->üí• BREAKING CHANGES" },
  { message = "^chore", group = "üé´ Chores", skip = true },
  { message = "pre-commit autoupdate", skip = true },
  { message = "sync with (repo|repository) template", skip = true },
  { message = "sync with template (repo|repository)", skip = true },
  { message = "update pre-commit hooks", skip = true },
  { message = '^fix\((?<scope>deps(-dev)?)\):', group = "<!-- 25 -->‚¨ÜÔ∏è Dependencies" },
  { message = "^feat", group = "<!-- 10 -->‚ú® Features" },
  { message = "^fix", group = "<!-- 20 -->üêõ Bug Fixes" },
  { message = "^perf", group = "<!-- 30 -->‚ö° Performance Improvements" },
  { message = "^revert", group = "<!-- 40 -->‚è™ Reverts" },
  { message = "^docs", group = "<!-- 50 -->üìù Documentation" },
  { message = "^style", group = "<!-- 60 -->üíÑ Styles" },
  { message = "^refactor", group = "<!-- 70 -->‚ôª Code Refactoring" },
  { message = "^test", group = "<!-- 80 -->‚úÖ Tests" },
  { message = "^build", group = "<!-- 90 -->üë∑ Build System" },
  { message = "^ci", group = "<!-- 95 -->üîß Continuous Integration" },
]
protect_breaking_commits = true
filter_commits = false
tag_pattern = "v[0-9].*"
ignore_tags = "latest"
topo_order = true
sort_commits = "newest"
